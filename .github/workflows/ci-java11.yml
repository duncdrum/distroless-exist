name: Java 11 :release
on: 
  push:
  pull_request:
  schedule: 
      - cron: "11 4 * * *"

env:
  TEST_TAG: ${{ secrets.DOCKER_USERNAME }}/existdb:exist-ci
  IMAGE_TAG: release
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/existdb
  # EXIST_VER: 6.2.0

jobs:
  build:
    name: Build and Test Images
    runs-on: ubuntu-latest
    # NOTE (DP): Test on PRs and pushes
    if: github.ref == 'refs/heads/main' || github.base_ref ==  'main'
    steps:
    
    # SETUP
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64 
          # platforms: all

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Make buildkit default
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          install: true

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Install bats
        # run: sudo apt-get install bats libsaxonb-java
        run: sudo apt-get install bats

      - name: Check local images
        run: docker image ls

      # TODO(DP) needs adjusting for multi-stage see #5
      # - name: Modify logging config
      #   run: saxonb-xslt -s:dump/exist-distribution-${{ env.EXIST_VER }}/etc/log4j2.xml -xsl:log4j2-docker.xslt -o:log4j2.xml

      # BUILD
      # see https://github.com/eXist-db/exist/issues/4911
      - name: Build default images for testing on CI
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile_j11
          build-args: BRANCH=master
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache

      - name: Build debug images for testing on CI
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            BRANCH=master
            DISTRO_TAG=debug
          file: ./Dockerfile_j11
          load: true
          tags: ${{ env.TEST_TAG }}-debug
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache

      - name: Build nonroot images for testing on CI
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            BRANCH=master
            DISTRO_TAG=nonroot
            USR=nonroot:nonroot
          file: ./Dockerfile_j11
          load: true
          tags: ${{ env.TEST_TAG }}-nonroot
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache

      - name: Build debug-slim images for testing on CI
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            DISTRO_TAG=debug
            FLAVOR=slim
            BRANCH=master
          file: ./Dockerfile_j11
          load: true
          tags: ${{ env.TEST_TAG }}-debug-slim
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache

      # TEST
      - name: Start exist-ci containers
        run: |
          docker run -dit -p 8080:8080 --name exist-ci --rm ${{ env.TEST_TAG }}
          docker run -dit -p 8181:8080 -v $pwd/exist/autodeploy:/exist/autodeploy --name nonroot --rm ${{ env.TEST_TAG }}-nonroot
          sleep 35s

      # - name: Wait for exist-ci to boot    
      #   run: |
      #     timeout 60 sh -c 'until docker logs exist-ci | grep -qe "Server has started"; do sleep 3; done' localhost 8080        

      - name: Check mem and cgroup config    
        run: |
          docker logs exist-ci | grep -w "Approximate maximum amount of memory for JVM:"
          docker logs exist-ci | grep -w "Number of processors available to JVM:"

      - name: Run tests
        run: bats --tap test/bats/*.bats

      # DP: this dynamically set the version from master
      - name: Get SemVer string from test image
        run: |
          echo "EXIST_VER=$(docker exec exist-ci java org.exist.start.Main client --no-gui --xpath 'system:get-version()' | grep -i 'eXist version' | cut -d ' ' -f 3)" >> $GITHUB_ENV
      - name: Test GHA output
        run: echo $EXIST_VER

      # PUSH
      # Release
      - name: Push :${{ env.IMAGE_TAG }} to Dockerhub
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile_j11
          build-args: BRANCH=master
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          sbom: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:${{ env.EXIST_VER }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max 

      - name: Push :debug (${{ env.IMAGE_TAG }}) to Dockerhub
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile_j11
          build-args: |
            DISTRO_TAG=debug
            BRANCH=master
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          sbom: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-debug
            ${{ env.IMAGE_NAME }}:${{ env.EXIST_VER }}-debug
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Push :nonroot (${{ env.IMAGE_TAG }}) to Dockerhub
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile_j11
          build-args: |
            DISTRO_TAG=nonroot
            USR=nonroot:nonroot
            BRANCH=master
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          sbom: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-nonroot
            ${{ env.IMAGE_NAME }}:${{ env.EXIST_VER }}-nonroot
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

        # SLIM

      - name: Push :${{ env.IMAGE_TAG }}-slim to Dockerhub
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile_j11
          build-args: |
            FLAVOR=slim
            BRANCH=master
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          sbom: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-slim
            ${{ env.IMAGE_NAME }}:${{ env.EXIST_VER }}-slim
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max 

      - name: Push :debug-slim (${{ env.IMAGE_TAG }}) to Dockerhub
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile_j11
          build-args: |
            DISTRO_TAG=debug
            FLAVOR=slim
            BRANCH=master
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          sbom: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-debug-slim
            ${{ env.IMAGE_NAME }}:${{ env.EXIST_VER }}-debug-slim
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Push :nonroot-slim (${{ env.IMAGE_TAG }}) to Dockerhub
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile_j11
          build-args: |
            DISTRO_TAG=nonroot
            FLAVOR=slim
            USR=nonroot:nonroot
            BRANCH=master
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          sbom: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-nonroot-slim
            ${{ env.IMAGE_NAME }}:${{ env.EXIST_VER }}-nonroot-slim
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
